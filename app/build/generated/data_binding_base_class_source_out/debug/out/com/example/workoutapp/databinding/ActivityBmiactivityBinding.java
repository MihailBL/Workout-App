// Generated by view binder compiler. Do not edit!
package com.example.workoutapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workoutapp.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBmiactivityBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnDisplayBMIResults;

  @NonNull
  public final AppCompatEditText etUserHeightInput;

  @NonNull
  public final AppCompatEditText etUserHeightInputUSUnitsFEET;

  @NonNull
  public final EditText etUserHeightInputUSUnitsINCHES;

  @NonNull
  public final AppCompatEditText etUserWeightInput;

  @NonNull
  public final AppCompatEditText etUserWeightInputUSUnitsPOUNDS;

  @NonNull
  public final LinearLayout llBMIResultView;

  @NonNull
  public final RadioButton rbMetricUnits;

  @NonNull
  public final RadioButton rbUSUnits;

  @NonNull
  public final RadioGroup rgUnitsConversionTab;

  @NonNull
  public final TextInputLayout tilUserHeight;

  @NonNull
  public final TextInputLayout tilUserHeightUSUnitsFEET;

  @NonNull
  public final TextInputLayout tilUserHeightUSUnitsINCHES;

  @NonNull
  public final TextInputLayout tilUserWeight;

  @NonNull
  public final TextInputLayout tilUserWeightUSUnitsPOUNDS;

  @NonNull
  public final Toolbar toolbarBMIActivity;

  @NonNull
  public final TextView tvUserBMIDescription;

  @NonNull
  public final TextView tvUserBMITitle;

  @NonNull
  public final TextView tvUserBMIType;

  @NonNull
  public final TextView tvUserBMIValue;

  @NonNull
  public final View viewHelper;

  private ActivityBmiactivityBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnDisplayBMIResults, @NonNull AppCompatEditText etUserHeightInput,
      @NonNull AppCompatEditText etUserHeightInputUSUnitsFEET,
      @NonNull EditText etUserHeightInputUSUnitsINCHES,
      @NonNull AppCompatEditText etUserWeightInput,
      @NonNull AppCompatEditText etUserWeightInputUSUnitsPOUNDS,
      @NonNull LinearLayout llBMIResultView, @NonNull RadioButton rbMetricUnits,
      @NonNull RadioButton rbUSUnits, @NonNull RadioGroup rgUnitsConversionTab,
      @NonNull TextInputLayout tilUserHeight, @NonNull TextInputLayout tilUserHeightUSUnitsFEET,
      @NonNull TextInputLayout tilUserHeightUSUnitsINCHES, @NonNull TextInputLayout tilUserWeight,
      @NonNull TextInputLayout tilUserWeightUSUnitsPOUNDS, @NonNull Toolbar toolbarBMIActivity,
      @NonNull TextView tvUserBMIDescription, @NonNull TextView tvUserBMITitle,
      @NonNull TextView tvUserBMIType, @NonNull TextView tvUserBMIValue, @NonNull View viewHelper) {
    this.rootView = rootView;
    this.btnDisplayBMIResults = btnDisplayBMIResults;
    this.etUserHeightInput = etUserHeightInput;
    this.etUserHeightInputUSUnitsFEET = etUserHeightInputUSUnitsFEET;
    this.etUserHeightInputUSUnitsINCHES = etUserHeightInputUSUnitsINCHES;
    this.etUserWeightInput = etUserWeightInput;
    this.etUserWeightInputUSUnitsPOUNDS = etUserWeightInputUSUnitsPOUNDS;
    this.llBMIResultView = llBMIResultView;
    this.rbMetricUnits = rbMetricUnits;
    this.rbUSUnits = rbUSUnits;
    this.rgUnitsConversionTab = rgUnitsConversionTab;
    this.tilUserHeight = tilUserHeight;
    this.tilUserHeightUSUnitsFEET = tilUserHeightUSUnitsFEET;
    this.tilUserHeightUSUnitsINCHES = tilUserHeightUSUnitsINCHES;
    this.tilUserWeight = tilUserWeight;
    this.tilUserWeightUSUnitsPOUNDS = tilUserWeightUSUnitsPOUNDS;
    this.toolbarBMIActivity = toolbarBMIActivity;
    this.tvUserBMIDescription = tvUserBMIDescription;
    this.tvUserBMITitle = tvUserBMITitle;
    this.tvUserBMIType = tvUserBMIType;
    this.tvUserBMIValue = tvUserBMIValue;
    this.viewHelper = viewHelper;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBmiactivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBmiactivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bmiactivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBmiactivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_displayBMIResults;
      Button btnDisplayBMIResults = ViewBindings.findChildViewById(rootView, id);
      if (btnDisplayBMIResults == null) {
        break missingId;
      }

      id = R.id.et_userHeightInput;
      AppCompatEditText etUserHeightInput = ViewBindings.findChildViewById(rootView, id);
      if (etUserHeightInput == null) {
        break missingId;
      }

      id = R.id.et_userHeightInputUSUnitsFEET;
      AppCompatEditText etUserHeightInputUSUnitsFEET = ViewBindings.findChildViewById(rootView, id);
      if (etUserHeightInputUSUnitsFEET == null) {
        break missingId;
      }

      id = R.id.et_userHeightInputUSUnitsINCHES;
      EditText etUserHeightInputUSUnitsINCHES = ViewBindings.findChildViewById(rootView, id);
      if (etUserHeightInputUSUnitsINCHES == null) {
        break missingId;
      }

      id = R.id.et_userWeightInput;
      AppCompatEditText etUserWeightInput = ViewBindings.findChildViewById(rootView, id);
      if (etUserWeightInput == null) {
        break missingId;
      }

      id = R.id.et_userWeightInputUSUnitsPOUNDS;
      AppCompatEditText etUserWeightInputUSUnitsPOUNDS = ViewBindings.findChildViewById(rootView, id);
      if (etUserWeightInputUSUnitsPOUNDS == null) {
        break missingId;
      }

      id = R.id.ll_BMIResultView;
      LinearLayout llBMIResultView = ViewBindings.findChildViewById(rootView, id);
      if (llBMIResultView == null) {
        break missingId;
      }

      id = R.id.rb_metricUnits;
      RadioButton rbMetricUnits = ViewBindings.findChildViewById(rootView, id);
      if (rbMetricUnits == null) {
        break missingId;
      }

      id = R.id.rb_USUnits;
      RadioButton rbUSUnits = ViewBindings.findChildViewById(rootView, id);
      if (rbUSUnits == null) {
        break missingId;
      }

      id = R.id.rg_unitsConversionTab;
      RadioGroup rgUnitsConversionTab = ViewBindings.findChildViewById(rootView, id);
      if (rgUnitsConversionTab == null) {
        break missingId;
      }

      id = R.id.til_userHeight;
      TextInputLayout tilUserHeight = ViewBindings.findChildViewById(rootView, id);
      if (tilUserHeight == null) {
        break missingId;
      }

      id = R.id.til_userHeightUSUnitsFEET;
      TextInputLayout tilUserHeightUSUnitsFEET = ViewBindings.findChildViewById(rootView, id);
      if (tilUserHeightUSUnitsFEET == null) {
        break missingId;
      }

      id = R.id.til_userHeightUSUnitsINCHES;
      TextInputLayout tilUserHeightUSUnitsINCHES = ViewBindings.findChildViewById(rootView, id);
      if (tilUserHeightUSUnitsINCHES == null) {
        break missingId;
      }

      id = R.id.til_userWeight;
      TextInputLayout tilUserWeight = ViewBindings.findChildViewById(rootView, id);
      if (tilUserWeight == null) {
        break missingId;
      }

      id = R.id.til_userWeightUSUnitsPOUNDS;
      TextInputLayout tilUserWeightUSUnitsPOUNDS = ViewBindings.findChildViewById(rootView, id);
      if (tilUserWeightUSUnitsPOUNDS == null) {
        break missingId;
      }

      id = R.id.toolbar_BMIActivity;
      Toolbar toolbarBMIActivity = ViewBindings.findChildViewById(rootView, id);
      if (toolbarBMIActivity == null) {
        break missingId;
      }

      id = R.id.tv_userBMIDescription;
      TextView tvUserBMIDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvUserBMIDescription == null) {
        break missingId;
      }

      id = R.id.tv_userBMITitle;
      TextView tvUserBMITitle = ViewBindings.findChildViewById(rootView, id);
      if (tvUserBMITitle == null) {
        break missingId;
      }

      id = R.id.tv_userBMIType;
      TextView tvUserBMIType = ViewBindings.findChildViewById(rootView, id);
      if (tvUserBMIType == null) {
        break missingId;
      }

      id = R.id.tv_userBMIValue;
      TextView tvUserBMIValue = ViewBindings.findChildViewById(rootView, id);
      if (tvUserBMIValue == null) {
        break missingId;
      }

      id = R.id.view_helper;
      View viewHelper = ViewBindings.findChildViewById(rootView, id);
      if (viewHelper == null) {
        break missingId;
      }

      return new ActivityBmiactivityBinding((RelativeLayout) rootView, btnDisplayBMIResults,
          etUserHeightInput, etUserHeightInputUSUnitsFEET, etUserHeightInputUSUnitsINCHES,
          etUserWeightInput, etUserWeightInputUSUnitsPOUNDS, llBMIResultView, rbMetricUnits,
          rbUSUnits, rgUnitsConversionTab, tilUserHeight, tilUserHeightUSUnitsFEET,
          tilUserHeightUSUnitsINCHES, tilUserWeight, tilUserWeightUSUnitsPOUNDS, toolbarBMIActivity,
          tvUserBMIDescription, tvUserBMITitle, tvUserBMIType, tvUserBMIValue, viewHelper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
